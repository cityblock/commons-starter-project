# An object with a Globally Unique ID
interface uniqueId {
  # The ID of the object.
  id: ID!
}

enum PokeType {
  normal
  grass
  fire
  water
  electric
  psychic
  ghost
  dark
  fairy
  rock
  ground
  steel
  flying
  fighting
  bug
  ice
  dragon
  poison
}

type Pokemon implements uniqueId {
  id: ID!
  name: String!
  pokemonNumber: Int!
  attack: Int!
  defense: Int!
  pokeType: PokeType!
  items: [Item!]
  moves: [String]!
  imageUrl: String!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

input PokemonCreateFields {
  name: String!
  pokemonNumber: Int!
  attack: Int!
  defense: Int!
  pokeType: PokeType!
  moves: [String!]!
  imageUrl: String!
}

input PokemonDeleteInput {
  pokemonId: ID!
}

input PokemonEditInput {
  pokemonId: ID!
  name: String
  pokemonNumber: Int
  attack: Int
  defense: Int
  pokeType: PokeType
  moves: [String!]
  imageUrl: String
}

type Item implements uniqueId {
  id: ID!
  name: String!
  pokemonId: String!
  price: Int!
  happiness: Int!
  imageUrl: String!
  createdAt: String!
  updatedAt: String!
  deletedAt: String!
}

type RootMutationType {
  pokemonCreate(input: PokemonCreateFields): Pokemon!
  pokemonDelete(input: PokemonDeleteInput): Pokemon!
  pokemonEdit(input: PokemonEditInput): Pokemon!
}

type RootQueryType {
  pokemon: [Pokemon]!
  fullPokemon(pokemonId: ID!): Pokemon!
}

schema {
  query: RootQueryType
  mutation: RootMutationType
}
