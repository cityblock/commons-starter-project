import { IPatient } from 'schema';
import Patient from '../../../models/patient';
import { IPatientInfoAthena } from '../types';

// Note: This drops some fields
export const formatPatient = (p: IPatientInfoAthena, patient: Patient): IPatient => ({
  id: patient.id,
  athenaPatientId: Number(p.patientid),
  firstName: p.firstname,
  lastName: p.lastname,
  homeClinicId: patient.homeClinicId,
  suffix: p.suffix,
  preferredName: p.preferredname,
  raceName: p.racename,
  dob: p.dob,
  sex: p.sex,
  race: p.race,
  ethnicityCode: p.ethnicitycode,
  status: p.status,
  ssn: p.ssn,
  homebound: p.homebound,
  language6392code: p.language6392code,
  maritalStatus: p.maritalstatus,
  maritalStatusName: p.maritalstatusname,
  patientPhoto: p.patientphoto,
  patientPhotoUrl: p.patientphotourl,
  contact: {
    email: p.email,
    lastEmail: p.lastemail,
    emailExists: p.emailexists,
    homePhone: p.homephone,
    mobilePhone: p.mobilephone,
    hasMobile: p.hasmobile,
    consentToCall: p.consenttocall,
    consentToText: p.consenttotext,
  },
  guarantor: {
    firstName: p.guarantorfirstname,
    lastName: p.guarantorlastname,
    suffix: p.guarantorsuffix,
    SSN: p.guarantorssn,
    DOB: p.guarantordob,
    phone: p.guarantorphone,
    email: p.guarantoremail,
    relationshipToPatient: p.guarantorrelationshiptopatient,
    employerId: p.guarantoremployerid,
    address: {
      addressSameAsPatient: p.guarantoraddresssameaspatient,
      address1: p.guarantoraddress1,
      city: p.guarantorcity,
      zip: p.guarantorzip,
      state: p.guarantorstate,
      countryCode: p.guarantorcountrycode,
      countryCode3166: p.guarantorcountrycode3166,
    },
  },
  employer: {
    id: p.employerid,
    phone: p.employerphone,
    city: p.employercity,
    state: p.employerstate,
    name: p.employername,
    address: p.employeraddress,
    zip: p.employerzip,
  },
  address: {
    city: p.city,
    address1: p.address1,
    countryCode: p.countrycode,
    countryCode3166: p.countrycode3166,
    state: p.state,
    zip: p.zip,
  },
  povertyLevel: {
    povertyLevelIncomeDeclined: p.povertylevelincomedeclined,
    povertyLevelIncomeRangeDeclined: p.povertylevelincomerangedeclined,
    povertyLevelFamilySizeDeclined: p.povertylevelfamilysizedeclined,
  },
});
