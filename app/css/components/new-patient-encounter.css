@import '../common/sizes';
.invertedButton {
  @apply --inverted-button;
}

.button {
  @apply --button;
}

::-webkit-scrollbar {
  display: none;
}

.newEncounter {
  border-radius: 4px;
  height: 42px;
  padding-top: 13px;
  padding-left: var(--small-gutter);
  padding-right: var(--small-gutter);
  transition: height 0.3s ease-in-out, box-shadow 0.3s ease-in-out;

  &:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    cursor: pointer;
  }
}

.newEncounter.expandedNewEncounter {
  height: 488px;
  transition: height 0.3s ease-in-out;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  position: relative;

  &:hover {
    cursor: default;
  }
}

.newEncounterLabel {
  transition: opacity 0.15s linear;
  transition-delay: 0.4s;
  opacity: 1;
}

.newEncounter.expandedNewEncounter .newEncounterLabel {
  transition: opacity 0.1s linear;
  opacity: 0;
}

.newEncounterForm {
  opacity: 0;
  height: 0;
}

.newEncounter.expandedNewEncounter .newEncounterForm {
  margin-top: -18px;
  padding: 10px 0;
  transition: opacity 0.4s ease-in;
  transition-delay: 0.3s;
  height: 100%;
  opacity: 1;
}

.newEncounterFormLabel {
  font-family: var(--basetica-medium);
  font-size: var(--default-font-size);
  line-height: var(--default-line-height);
  color: var(--black-color);
  text-align: left;
  margin-bottom: 10px;
  display: none;
}

.newEncounter.expandedNewEncounter .newEncounterFormLabel {
  display: block;
}

.newEncounterFormTextInput, .newEncounterFormTextArea {
  width: 100%;
  margin-bottom: var(--small-gutter);
  display: none;
}

.newEncounter.expandedNewEncounter .newEncounterFormTextInput {
  display: block;
}

.newEncounter.expandedNewEncounter .newEncounterFormTextArea {
  display: block;
}

.newEncounterFormTextInput {
  height: 50px;
}

.newEncounterFormTextArea {
  height: 100px;
}

.newEncounterFormTextInput input[type=text],
.newEncounterFormTextInput input[type=time],
.newEncounterFormTextArea textarea {
  border: 1px solid var(--border-color);
  outline: none;
  padding: 14px var(--small-gutter);
  font-family: var(--roboto);
  color: var(--black-color);
  font-size: var(--medium-font-size);
  line-height: var(--medium-font-line-height);
  width: 100%;
  height: 100%;
  resize: none;

  &:focus {
    border: 1px solid var(--light-blue-color);
  }
}

.newEncounterFormTextInput input[type=time] {
  text-transform: lowercase;
}

.newEncounterFormMultiInputRow {
  lost-flex-container: row;
}

.newEncounterInputLargeFormGroup {
  lost-column: 3/4 2 5px;
}

.newEncounterInputSmallFormGroup {
  lost-column: 1/4 2;
}

.newEncounterFormAddAttachmentRow, .newEncounterFormButtonRow, .newEncounterFormAddAttachment {
  align-items: center;
  lost-flex-container: row;
}

.newEncounterFormAddAttachmentRow {
  display: none;
}

.newEncounter.expandedNewEncounter .newEncounterFormAddAttachmentRow {
  display: block;
}

.newEncounterFormAddAttachmentRow, .newEncounterFormAddAttachment {
  padding-top: 6px;
  justify-content: flex-start;
}

.newEncounterFormButtonRow {
  margin-top: 28px;
  justify-content: space-between;
}

.newEncounterFormAddAttachment {
  &:hover {
    cursor: pointer;
  }
}

.newEncounterFormAddAttachmentIcon {
  margin-left: 5px;
  margin-bottom: 2px;
  background-image: url('../../assets/attach-file-blue.svg');
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
  height: 17px;
  width: 8px;
}

.newEncounterFormAddAttachmentLabel {
  font-family: var(--basetica-medium);
  font-size: var(--default-font-size);
  line-height: var(--default-line-height);
  color: var(--gray-font-color);
  margin-left: 14px;
}

.newEncounterCancelButton, .newEncounterSubmitButton {
  display: none;
}

.expandedNewEncounter .newEncounterCancelButton {
  display: block;
}

.expandedNewEncounter .newEncounterSubmitButton {
  display: block;
}

.newEncounterLoadingError {
  position: absolute;
  border-radius: 4px;
  background: rgba(255, 255, 255, 255, 0);
  top: 0;
  left: 0;
  height: 0;
}

.expandedNewEncounter .newEncounterLoadingError {
  background: rgba(255, 255, 255, 0.9);
}

.expandedNewEncounter .newEncounterLoadingError.newEncounterLoadingErrorError {
  height: 100%;
  width: 100%;
}

.newEncounterSavingSpinner, .newEncounterSavingError {
  display: none;
}

.newEncounterLoadingError.newEncounterLoadingErrorLoading .newEncounterSavingSpinner {
  text-align: center;
  margin-top: 200px;
  justify-content: center;
  lost-flex-container: column;
}

.newEncounterLoadingError.newEncounterLoadingErrorLoading .newEncounterSavingSpinner .spinner {
  margin: 0 auto;
}

.expandedNewEncounter .newEncounterLoadingError.newEncounterLoadingErrorLoading {
  height: 100%;
  width: 100%;
}

.newEncounterLoadingError.newEncounterLoadingErrorError .newEncounterSavingError {
  text-align: center;
  margin-top: 160px;
  justify-content: center;
  lost-flex-container: column;
}

.newEncounterLoadingError.newEncounterLoadingErrorError .newEncounterSavingErrorIcon {
  background: url('../../assets/error-circle.svg');
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
  height: 30px;
  width: 30px;
  margin: 0 auto 23px;
}

.newEncounterLoadingError.newEncounterLoadingErrorError .newEncounterSavingErrorLabel {
  font-family: var(--basetica-black);
  font-size: var(--medium-font-size);
  line-height: var(--medium-font-line-height);
  color: var(--default-font-color);
  margin-bottom: 10px;
}

.newEncounterLoadingError.newEncounterLoadingErrorError .newEncounterSavingErrorSubtext {
  font-family: var(--roboto);
  font-size: var(--default-font-size);
  line-height: var(--default-line-height);
  color: var(--gray-font-color);
  margin-bottom: 30px;
}

.newEncounterLoadingError.newEncounterLoadingErrorError .newEncounterSavingErrorButton {
  font-family: var(--basetica-medium);
  font-size: var(--small-font-size);
  line-height: var(--small-font-line-height);
  width: 94px;
  height: 32px;
  margin: 0 auto;
  padding: 9px;
}
